{"version":3,"file":"static/js/325.7374ec34.chunk.js","mappings":"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","sources":["pages/Enquiry/CreateEnquiry.js","pages/Search.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/helpers.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/react-bootstrap/esm/getInitialPopperStyles.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport EnquiryForm from \"./EnquiryForm\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction CreateEnquiry(props) {\n  // not needed for now as showing in popup\n  // const { state } = useLocation();\n  // console.log(state);\n  return (\n    <>\n      <EnquiryForm\n        type=\"create\"\n        title=\"Create Enquiry\"\n        edit={false}\n        isFlow={props ? true : false}\n        level={props?.levelId}\n        intake={props?.intake}\n        courseId={props?.courseId}\n        uniId={props?.uniId}\n      />\n    </>\n  );\n}\n\nexport default CreateEnquiry;\n","import React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport { Form, OverlayTrigger, Popover, ProgressBar } from \"react-bootstrap\";\nimport SelectionBox from \"../components/UI/Form/SelectionBox\";\nimport LoaderUni from \"../components/UI/Layouts/LoaderUni\";\nimport { ajaxCallWithHeaderOnly } from \"../helpers/ajaxCall\";\nimport { useSelector } from \"react-redux\";\nimport DataTable from \"react-data-table-component\";\nimport LoadingData from \"../components/UI/LoadingData\";\nimport { useNavigate } from \"react-router-dom\";\nimport CreateEnquiry from \"./Enquiry/CreateEnquiry\";\nimport UiModal from \"../components/UI/UiModal\";\n\nconst initialState = {\n  name: null,\n  examGiven: null,\n  marks: null,\n  engWaiver: null,\n  levelId: null,\n  levelName: null,\n  intakeId: null,\n  intakeName: null,\n  ielts: null,\n  toefl: null,\n  pte: null,\n  cSearch: null,\n  university: { id: null, name: null },\n  loadPercent: 0,\n  loadText: \"Fill all Details to load Courses\",\n  isAll: 0,\n  filter: null,\n  refresh: 0,\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"resetRefresh\") {\n    return {\n      ...state,\n      refresh: 0,\n    };\n  }\n\n  if (action.type === \"checkThings\") {\n    let loadText = \"Fill all Details to load Courses\";\n    let load = 0;\n    let isAll = 1;\n    if (state.ielts || state.toefl || state.pte) {\n      load += 25;\n    }\n    if (state.intakeId) {\n      load += 25;\n    }\n    if (state.levelId) {\n      load += 25;\n    }\n    if (state.cSearch) {\n      load += 25;\n    }\n    isAll = isAll && (state.ielts || state.toefl || state.pte);\n    isAll = isAll && state.intakeId;\n    isAll = isAll && state.levelId && state.cSearch;\n    console.log(\"isall now\", isAll);\n    // console.log(\"is All is\", isAll);\n    isAll = isAll ? 1 : 0;\n    if (load) {\n      const remainSteps = 4 - load / 25;\n\n      loadText = `${remainSteps} steps remains to get list of courses`;\n    }\n    let filter = `?course_name=${state.cSearch}`;\n    // filter += state.ielts ? `&ielts_score=${state.ielts}` : \"\";\n    // filter += state.toefl ? `&ielts_score=${state.toefl}` : \"\";\n    // filter += state.pte ? `&ielts_score=${state.pte}` : \"\";\n    return {\n      ...state,\n      loadPercent: load,\n      isAll,\n      loadText,\n      filter,\n    };\n  }\n  let value = action.value;\n  if (!action.value) {\n    value = null;\n  }\n\n  return {\n    ...state,\n    [action.type]: value,\n    refresh: 1,\n  };\n};\nfunction Search() {\n  const [throwErr, setThrowErr] = useState(null);\n  const [uniData, setUniData] = useState([]);\n  const [isUniLoadingData, setIsUniLoadingData] = useState(false);\n\n  // for pagination\n  const [pageNo, setPageNo] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [totalRows, setTotalRows] = useState(0);\n\n  // for showing popup\n  const [enqPopup, setEnqPopup] = useState({ show: false, data: {} });\n  const handlePerRowsChange = (newPerPage, page) => {\n    // console.log(\"per row is changed and data is\", newPerPage, page);\n    setPerPage(newPerPage);\n    setPageNo(page);\n    setUniData([]);\n  };\n  // pagination over\n  const [uniState, dispatchUniState] = useReducer(reducer, initialState);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (throwErr) throw throwErr;\n  }, [throwErr]);\n  const authData = useSelector((state) => state.authStore);\n  const filter = useRef();\n\n  const goToEnqPage = function (uniId, courseId, course_levels) {\n    setEnqPopup({\n      show: true,\n      data: {\n        levelId: course_levels,\n        intake: uniState.intakeId,\n        uniId,\n        courseId,\n      },\n    });\n    // navigate(\"/enquiry/create\", {\n    //   state: {\n    //     uniId,\n    //     courseId,\n    //     search: uniState.cSearch,\n    //     levelId: uniState.levelId,\n    //     name: uniState.name,\n    //     intake: uniState.intakeId,\n    //     giveBackBtn: true,\n    //   },\n    // });\n  };\n  // const isAll = uniState.ielts || uniState.ielts || uniState.ielts;\n  const uniColumns = [\n    {\n      name: \"University Name\",\n      selector: (row) => row.uniName,\n      sortable: true,\n    },\n    {\n      name: \"Course Name\",\n      selector: (row) => row.courseName,\n      sortable: true,\n    },\n    {\n      name: \"Action\",\n      selector: (row) => (\n        <span\n          className=\"btn-primary btn\"\n          onClick={() => {\n            goToEnqPage(row.uniId, row.courseId, row.course_levels);\n          }}\n        >\n          Apply To This Course\n        </span>\n      ),\n      sortable: true,\n    },\n  ];\n  const getData = async function () {\n    let courseUrl = `courseslistsuni/${uniState.filter}&p=${pageNo}&records=${perPage}`;\n    if (uniState.intakeId) {\n      courseUrl += `&intake=${uniState.intakeId}`;\n    }\n    if (uniState.levelId) {\n      courseUrl += `&course_levels=${uniState.levelId}`;\n    }\n    setIsUniLoadingData(true);\n\n    const response = await ajaxCallWithHeaderOnly(\n      `${courseUrl}`,\n      {\n        Authorization: `Bearer ${authData.accessToken}`,\n      },\n      \"POST\",\n      null\n    );\n    console.log(response);\n    if (response?.isNetwork) {\n      setThrowErr({ ...response, page: \"enquiries\" });\n      return;\n    }\n    if (response?.status === 401) {\n      setThrowErr({ ...response, page: \"enquiries\" });\n      return;\n    }\n    if (response?.results?.length > 0) {\n      const data = response.results.map((data) => {\n        return {\n          ...data,\n          courseId: data?.id,\n          courseName: data?.course_name,\n          uniId: data?.university?.id,\n          uniName: data?.university?.univ_name,\n        };\n      });\n      setTotalRows(response.count);\n      setUniData(data);\n    } else {\n      setTotalRows(0);\n      setUniData([]);\n    }\n    setIsUniLoadingData(false);\n    dispatchUniState({\n      type: \"resetRefresh\",\n    });\n  };\n  useEffect(() => {\n    console.log(uniState.isAll && uniState.refresh);\n    try {\n      if (uniState.cSearch) getData();\n    } catch (e) {\n      setThrowErr({ e, page: \"enquiries\" });\n      return;\n    }\n  }, [\n    uniState.isAll,\n    uniState.refresh,\n    uniState.levelId,\n    uniState.intakeId,\n    uniState.ielts,\n    uniState.toefl,\n    uniState.pte,\n    uniState.cSearch,\n    perPage,\n    pageNo,\n  ]);\n\n  const popoverSearch = (\n    <Popover id=\"popoverName\">\n      <Popover.Body>\n        <Form.Group className=\"mb-3 col-md-12\" controlId=\"cSearch\">\n          <Form.Control\n            type=\"text\"\n            name=\"cSearch\"\n            value={uniState.cSearch}\n            onChange={(e) => {\n              dispatchUniState({\n                type: \"cSearch\",\n                value: e.target.value,\n              });\n              dispatchUniState({\n                type: \"checkThings\",\n              });\n            }}\n          />\n        </Form.Group>\n      </Popover.Body>\n    </Popover>\n  );\n\n  // level and intake filter\n  const selectValueChanged = function (typeId, typeName, val, name) {\n    // console.log(val);\n    // console.log(name);\n    if (name) {\n      dispatchUniState({\n        type: typeId,\n        value: val,\n      });\n      dispatchUniState({\n        type: typeName,\n        value: name.name,\n      });\n      dispatchUniState({\n        type: \"checkThings\",\n      });\n\n      // reset the data table\n      dispatchUniState({\n        type: \"resetRefresh\",\n      });\n    }\n  };\n  return (\n    <div class=\"row layout-spacing\">\n      <div class=\"neumorphism-box nmb\">\n        <div class=\"col-lg-12 flex-main\">\n          {/* <div className=\"uniForm text-center\">\n            Please find me course of{\" \"}\n            <OverlayTrigger\n              placement=\"bottom\"\n              trigger=\"click\"\n              overlay={popoverSearch}\n              rootClose\n            >\n              <span className=\"uniSName\">\n                {uniState.cSearch?.length\n                  ? uniState.cSearch\n                  : \"(Specialization)\"}\n              </span>\n            </OverlayTrigger>{\" \"}\n          </div> */}\n          <Form.Group className=\"mb-3 col-md-6\" controlId=\"cSearch\">\n            <Form.Label>Search Course</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"cSearch\"\n              value={uniState.cSearch}\n              onChange={(e) => {\n                dispatchUniState({\n                  type: \"cSearch\",\n                  value: e.target.value,\n                });\n                dispatchUniState({\n                  type: \"checkThings\",\n                });\n              }}\n            />\n          </Form.Group>\n        </div>\n      </div>\n      <div class=\"neumorphism-box nmb\">\n        <div class=\"col-lg-12\">\n          {uniState.cSearch ? (\n            <>\n              {/* <div className=\"row nomp\">\n                <SelectionBox\n                  groupClass=\"mb-3 col-md-3 selectbox\"\n                  groupId=\"uniFilter\"\n                  label=\"Filter Courses By Universities\"\n                  // onChange={props.filterSelectionChanged.bind(\n                  //   null,\n                  //   \"university_interested\"\n                  // )}\n                  // value={props.enqFilter.university_interested}\n                  name=\"uniFilter\"\n                  url={`courses/universities/${uniState.filter}`}\n                  isSearch={true}\n                  objKey=\"univ_name\"\n                />\n              </div> */}\n              <div className=\"row\">\n                <SelectionBox\n                  groupClass=\"mb-3 col-md-2 selectbox\"\n                  groupId=\"levelApplying\"\n                  value={uniState.levelId}\n                  label=\"Level\"\n                  onChange={selectValueChanged.bind(\n                    null,\n                    \"levelId\",\n                    \"levelName\"\n                  )}\n                  name=\"levelApplying\"\n                  url=\"courselevels/\"\n                  isSearch={false}\n                  objKey=\"levels\"\n                />\n                <SelectionBox\n                  label=\"Intake\"\n                  groupClass=\"mb-3 col-md-2 selectbox\"\n                  groupId=\"intakeInterested\"\n                  value={uniState.intakeId}\n                  onChange={selectValueChanged.bind(\n                    null,\n                    \"intakeId\",\n                    \"intakeName\"\n                  )}\n                  name=\"intakeInterested\"\n                  url=\"intakes/\"\n                  isSearch={true}\n                  objKey=\"it's different\"\n                />\n              </div>\n              <DataTable\n                onChangePage={(page) => {\n                  // console.log(\"new Page numbner is\", page);\n                  setPageNo(page);\n                  setUniData([]);\n                }}\n                columns={uniColumns}\n                data={uniData}\n                onChangeRowsPerPage={handlePerRowsChange}\n                pagination\n                paginationServer\n                progressPending={isUniLoadingData}\n                progressComponent={\n                  <LoadingData className=\"loading-spinner-flex\" />\n                }\n                paginationTotalRows={totalRows}\n              />\n              {enqPopup.show ? (\n                <UiModal\n                  setModalStatus={() => setEnqPopup({ show: false, data: {} })}\n                  showStatus={enqPopup.show}\n                  showHeader={true}\n                  title=\"\"\n                  body={\n                    <CreateEnquiry\n                      levelId={enqPopup.data.levelId}\n                      intake={enqPopup.data.intake}\n                      uniId={enqPopup.data.uniId}\n                      courseId={enqPopup.data.courseId}\n                    />\n                  }\n                  showFooter={false}\n                  footerContent=\"\"\n                  size=\"xl\"\n                />\n              ) : (\n                \"\"\n              )}\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {}\n\n// Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n  return bsDirection;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  hasDoneInitialMeasure,\n  popper,\n  show,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = {\n      ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: computedStyle,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","export default function getInitialPopperStyles(position = 'absolute') {\n  return {\n    position,\n    top: '0',\n    left: '0',\n    opacity: '0',\n    pointerEvents: 'none'\n  };\n}"],"names":["props","_jsx","_Fragment","children","EnquiryForm","type","title","edit","isFlow","level","levelId","intake","courseId","uniId","initialState","name","examGiven","marks","engWaiver","levelName","intakeId","intakeName","ielts","toefl","pte","cSearch","university","id","loadPercent","loadText","isAll","filter","refresh","reducer","state","action","_objectSpread2","_objectSpread","load","console","log","concat","value","_defineProperty","_useState","useState","_useState2","_slicedToArray","throwErr","setThrowErr","_useState3","_useState4","uniData","setUniData","_useState5","_useState6","isUniLoadingData","setIsUniLoadingData","_useState7","_useState8","pageNo","setPageNo","_useState9","_useState10","perPage","setPerPage","_useState11","_useState12","totalRows","setTotalRows","_useState13","show","data","_useState14","enqPopup","setEnqPopup","_useReducer","useReducer","_useReducer2","uniState","dispatchUniState","useNavigate","useEffect","authData","useSelector","authStore","uniColumns","useRef","selector","row","uniName","sortable","courseName","className","onClick","course_levels","getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$results","courseUrl","response","wrap","_context","prev","next","ajaxCallWithHeaderOnly","Authorization","accessToken","sent","isNetwork","page","abrupt","status","results","length","map","_data$university","_data$university2","course_name","univ_name","count","stop","apply","arguments","e","Popover","Form","selectValueChanged","typeId","typeName","val","_jsxs","class","controlId","onChange","target","SelectionBox","groupClass","groupId","label","bind","url","isSearch","objKey","DataTable","onChangePage","columns","onChangeRowsPerPage","newPerPage","pagination","paginationServer","progressPending","progressComponent","LoadingData","paginationTotalRows","UiModal","setModalStatus","showStatus","showHeader","body","CreateEnquiry","showFooter","footerContent","size","createWithBsPrefix","React","ref","bsPrefix","placement","style","arrowProps","hasDoneInitialMeasure","popper","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","isRTL","useIsRTL","_ref2","split","primaryPlacement","bsDirection","getOverlayDirection","computedStyle","position","undefined","top","left","opacity","pointerEvents","getInitialPopperStyles","strategy","role","classNames","PopoverBody","defaultProps","Object","assign","Header","PopoverHeader","Body","POPPER_OFFSET"],"sourceRoot":""}